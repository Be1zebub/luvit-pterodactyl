{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2022-11-21T05:10:01-05:00",
    "name": "Luvit",
    "author": "beelzebub@incredible-gmod.ru",
    "description": "A Luvit egg.",
    "features": null,
    "docker_images": {
        "ghcr.io\/be1zebub\/yolks:luvit": "ghcr.io\/be1zebub\/yolks:luvit"
    },
    "file_denylist": [],
    "startup": ".\/luvit {{STARTUP_FILE}}",
    "config": {
        "files": "{}",
        "startup": "{\r\n    \"done\": \"Server startup complete\"\r\n}",
        "logs": "{}",
        "stop": "^c"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n\r\nGREEN=\"\\033[0;32m\"\r\nCLEAR=\"\\033[0m\"\r\n\r\necho -e \"${GREEN}downloading apt dependencies${CLEAR}\"\r\n\r\napt update\r\napt install -y curl\r\n\r\nif [ \"${APT_PACKAGES}\" != \"\" ]; then\r\n\techo -e \"${GREEN}Installing apt packages...${CLEAR}\";\r\n\tapt install -y \"${APT_PACKAGES}\";\r\nfi\r\n\r\nmkdir -p \/mnt\/server\r\nmkdir -p \/mnt\/server\/deps\r\ncd \/mnt\/server\r\n\r\n# temp unset egg vars to solve conflicts (lit installation script uses the same vars)\r\n_LIT_VERSION=\"$LIT_VERSION\"\r\n_LUVI_VERSION=\"$LUVI_VERSION\"\r\nexport LIT_VERSION=\r\nexport LUVI_VERSION=\r\n\r\necho -e \"${GREEN}downloading luvit${CLEAR}\"\r\ncurl -L https:\/\/raw.githubusercontent.com\/Be1zebub\/lit\/master\/update-lit.sh | sh\r\n# curl -L https:\/\/raw.githubusercontent.com\/luvit\/lit\/master\/get-lit.sh | env -i sh\r\n\r\nexport LIT_VERSION=\"$_LIT_VERSION\"\r\nexport LUVI_VERSION=\"$_LUVI_VERSION\"\r\n\r\necho 'print(\"Server startup complete\") -- put this line in your app code so that the wings daemon can mark your server as running (or your app uptime will be in 'Starting' stage all time)\r\n\r\nlocal http = require(\"http\")\r\nlocal env = require(\"env\")\r\n\r\nlocal port = tonumber(env.get(\"SERVER_PORT\"))\r\n\r\nhttp.createServer(function (req, res)\r\n  local body = \"Hello world\\n\"\r\n  res:setHeader(\"Content-Type\", \"text\/plain\")\r\n  res:setHeader(\"Content-Length\", #body)\r\n  res:finish(body)\r\nend):listen(port, \"0.0.0.0\")\r\n\r\nprint(\"Server running at http:\/\/0.0.0.0:\".. port ..\"\/\")' > start.lua\r\n\r\necho -e \"${GREEN}installation done! put your app code in start.lua & start server.${CLEAR}\"",
            "container": "debian:buster-slim",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Startup file",
            "description": "The Lua file to run",
            "env_variable": "STARTUP_FILE",
            "default_value": "start.lua",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Apt packages",
            "description": "Apt packages to install\r\n\r\nexample: <code>sqlite3 libsqlite3-dev<\/code>\r\n(it installs when the server is installs, unfortunately there is no way to make the installation of apt packages dynamic, every time the server starts)",
            "env_variable": "APT_PACKAGES",
            "default_value": "",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Auto update",
            "description": "Auto update apt packages, lit packages from package.lua, lit, luvi, luvit.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Lit version",
            "description": "Works only with \"Auto update\" enabled.\r\nVersions list: https:\/\/github.com\/luvit\/lit\/tags\r\nSet the value to \"latest\" so that the yolk always update the lit to the latest version.",
            "env_variable": "LIT_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Luvi version",
            "description": "Works only with \"Auto update\" enabled.\r\nVersions list: https:\/\/github.com\/luvit\/luvi\/releases\r\nSet the value to \"latest\" so that the yolk always update the luvi to the latest version.",
            "env_variable": "LUVI_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}
